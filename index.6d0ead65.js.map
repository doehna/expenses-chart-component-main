{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,IAAI;QACA,MAAM,WAAW,MAAM;QACvB,MAAM,iBAAiB,SAAS,gBAAgB,CAAC;QACjD,IAAI,WAAW,iBAAiB,UAAU,IAAI,OAAO,MAAM;QAC3D,IAAI,QAAQ;QACZ,IAAI,MAAM,aAAa;QAEvB,eAAe,OAAO,CAAC,CAAC,SAAS;YAC7B,WAAW,YAAY,QAAQ,gBAAgB,EAAE;YACjD,cAAc,SAAS;YACvB,aAAa,QAAQ,iBAAiB,EAAE,KAAK,QAAQ,CAAC,WAAW;YACjE,eAAe,QAAQ,QAAQ,CAAC,EAAE,EAAE,UAAU;QAClD;IACJ,EACA,OAAO,OAAO;QACV,QAAQ,KAAK,CAAC,UAAU;IAC5B;AAEJ;AAEA,eAAe;IACX,IAAI;QACA,MAAM,WAAW,MAAM,MAAM;QAC7B,IAAI,CAAC,SAAS,EAAE,EACZ,MAAM,IAAI,MAAM,CAAC,6BAA6B,EAAE,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,UAAU,CAAC,CAAC;QAE5F,OAAO,MAAM,SAAS,IAAI;IAC9B,EACA,OAAO,OAAO;QACV,QAAQ,KAAK,CAAC,uDAAuD;IACzE;AACJ;AAEA,SAAS,WAAW,UAAU,EAAE,OAAO,EAAE,QAAQ;IACzC,QAAQ,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG;AACpD;AAEA,SAAS,iBAAiB,KAAK,EAAE,KAAK;IAClC,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IACvB,MAAM,MAAM,CAAC,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE;IAE5C,OAAO;AACX;AAEA,SAAS,cAAc,OAAO,EAAE,KAAK;IACjC,QAAQ,gBAAgB,CAAC,SAAS,KAAK,QAAQ,QAAQ,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,QAAQ,gBAAgB,CAAC,SAAS;AACxI;AAEA,SAAS;IACL,IAAI,OAAO,IAAI;IACf,OAAO,KAAK,kBAAkB,CAAC,SAAS;QAAE,SAAS;IAAQ,GAAG,iBAAiB;AACnF;AAEA,SAAS,aAAa,OAAO,EAAE,GAAG,EAAE,WAAW;IACvC,QAAQ,KAAK,CAAC,MAAM,GAAG,CAAC,EAAG,AAAC,YAAY,MAAM,GAAG,MAAO,IAAK,EAAE,CAAC;AACxE;AAEA,SAAS,aAAa,QAAQ;IAC1B,IAAI,MAAM;IACV,SAAS,OAAO,CAAC,CAAA;QACb,MAAM,QAAQ,MAAM,GAAG,MAAM,QAAQ,MAAM,GAAG;IAClD;IACA,OAAO;AACX;AAEA,SAAS,eAAe,OAAO,EAAE,QAAQ,EAAE,UAAU;IACjD,QAAQ,SAAS,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACzD","sources":["src/code.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', async function () {\n    try {\n        const jsonData = await fetchJSONData();\n        const chartBarForDay = document.querySelectorAll(\".chart__bar-for-day\");\n        let lastWeek = changeWeeksOrder(jsonData, new Date().getDay());\n        let today = getTodayName();\n        let max = getMaxOfJson(jsonData);\n\n        chartBarForDay.forEach((element, arrayIndex) => {\n            addDayName(arrayIndex, element.lastElementChild, lastWeek);\n            addTodayClass(element, today);\n            setBarHeight(element.firstElementChild, max, jsonData[arrayIndex]);\n            addDailyAmount(element.children[1], lastWeek, arrayIndex);\n        });\n    }\n    catch (error) {\n        console.error('Error:', error);\n    }\n\n});\n\nasync function fetchJSONData() {\n    try {\n        const response = await fetch(\"data.json\")\n        if (!response.ok) {\n            throw new Error(`Network response was not ok: ${response.status} ${response.statusText}`);\n        }\n        return await response.json();\n    }\n    catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n    }\n}\n\nfunction addDayName(arrayIndex, element, lastWeek) {\n        element.innerHTML = lastWeek[arrayIndex].day;\n}\n\nfunction changeWeeksOrder(array, dayId) {\n    for (let i = 7; i > dayId; i--) {\n        array.splice(0, 0, array.splice(6, 1)[0]);\n    }\n    return array;\n}\n\nfunction addTodayClass(element, today) {\n    element.lastElementChild.innerHTML === today ? element.firstElementChild.classList.add(\"today\") : element.lastElementChild.innerHTML;\n}\n\nfunction getTodayName() {\n    var date = new Date();\n    return date.toLocaleDateString(\"en-EN\", { weekday: 'short' }).toLocaleLowerCase();\n}\n\nfunction setBarHeight(element, max, jsonElement) {\n        element.style.height = `${((jsonElement.amount / max) * 120)}px`;\n}\n\nfunction getMaxOfJson(jsonData) {\n    let max = 0;\n    jsonData.forEach(element => {\n        max = element.amount > max ? element.amount : max;\n    })\n    return max;\n}\n\nfunction addDailyAmount(element, lastWeek, arrayIndex) {\n    element.innerHTML = `$${lastWeek[arrayIndex].amount}`;\n}"],"names":[],"version":3,"file":"index.6d0ead65.js.map","sourceRoot":"/__parcel_source_root/"}